name: Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  IMAGE_NAME: openstudio-cmake-tools

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-latest' || matrix.arch == 'arm64' && 'ubuntu-24.04-arm' }}
    strategy:
      fail-fast: false
      matrix:
        name: [focal-amd64, focal-arm64, jammy-amd64, jammy-arm64, noble-amd64, noble-arm64]
        include:
        - name: focal-amd64
          arch: amd64
          VARIANT: focal
          other_name: ubuntu-20.04
          # GCC_VER: "9"
        - name: focal-arm64
          arch: arm64
          VARIANT: focal
          other_name: ubuntu-20.04
          # GCC_VER: "9"
        - name: jammy-amd64
          arch: amd64
          VARIANT: jammy
          other_name: ubuntu-22.04
          # GCC_VER: "11"
        - name: jammy-arm64
          arch: arm64
          VARIANT: jammy
          other_name: ubuntu-22.04
          # GCC_VER: "11"
        - name: noble-amd64
          arch: amd64
          VARIANT: noble
          other_name: ubuntu-24.04
          # GCC_VER: "11"
        - name: noble-arm64
          arch: arm64
          VARIANT: noble
          other_name: ubuntu-24.04
          # GCC_VER: "11"

    steps:

    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: set lower case owner name
      run: |
        echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
      env:
        OWNER: '${{ github.repository_owner }}'

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}
        tags: |
          ${{ matrix.VARIANT }}
          ${{ matrix.other_name }}

    - name: Debug
      run: |
        ls -la
        find . -name Dockerfile

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VARIANT=${{ matrix.VARIANT }}
          GCC_VER=${{ matrix.GCC_VER }}
        platforms: linux/${{ matrix.arch }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-fat-image:
    name: Build and Push Multi-Arch
    runs-on: ubuntu-latest  # Can only run on x86_64 runners
    needs: build
    strategy:
      fail-fast: false
      matrix:
        VARIANT: [focal, jammy, noble]
        include:
        - VARIANT: focal
          other_name: ubuntu-20.04
        - VARIANT: jammy
          other_name: ubuntu-22.04
        - VARIANT: noble
          other_name: ubuntu-24.04
    steps:

    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: set lower case owner name
      run: |
        echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
      env:
        OWNER: '${{ github.repository_owner }}'

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}
        tags: |
          ${{ matrix.VARIANT }}
          ${{ matrix.other_name }}

    - name: Build and push multi-arch Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
